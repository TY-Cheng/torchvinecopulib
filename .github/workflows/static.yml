# Simple workflow for deploying static content to GitHub Pages
name: Deploy Docs

on:
  # Run static when Lint Pytest workflow completes
  workflow_run:
    workflows: [Lint Pytest]
    branches: ["main"]
    types:
      - completed

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    strategy:
      matrix:
        python-version: ["3.12"]

    runs-on: ubuntu-latest
    # Give commit access to the workflow
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install sphinx sphinx-pyproject furo torch scipy numpy
      # Build the docs using Sphinx
      - name: Sphinx build
        run: |
          sphinx-apidoc -o docs torchvinecopulib/ --separate
          sphinx-build docs docs/_build/html
      # Deploy sphinx documentation and commit to gh-pages branch
      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          publish_branch: gh-pages
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: docs/_build/html
          force_orphan: true

  deploy-ignore:
    if: ${{ github.event.workflow_run.conclusion != 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: Skip
        run: echo "Skipping deployment as Lint Pytest workflow run was not successful."
