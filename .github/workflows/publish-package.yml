# This workflow builds a Python package and publishes it to PyPI and TestPyPI.
name: Publish to PyPI and TestPyPI

on:
  push:
    branches: ["main"]
    tags:
      - "v*.*.*" # Match semantic version tags
  workflow_dispatch:
  # Allow manual dispatch for testing or immediate releases

jobs:
  build:
    name: Build distributions
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}

      - name: Install uv and sync deps, build sdist and wheel
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install uv
          python3 -m uv sync --extra cpu
          python3 -m uv build

      - name: Upload dist/*
        uses: actions/upload-artifact@v4
        with:
          name: python-distribution-packages
          path: dist/*

  publish-testpypi:
    name: Publish to TestPyPI
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: testpypi
      url: https://test.pypi.org/p/torchvinecopulib/
    permissions:
      id-token: write
      # contents: write
    steps:
      - name: Download dist/*
        uses: actions/download-artifact@v4
        with:
          name: python-distribution-packages
          path: dist/

      - name: Publish to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          verbose: true
          skip-existing: true
          repository-url: https://test.pypi.org/legacy/
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}

  publish-pypi:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    needs: publish-testpypi
    if: startsWith(github.ref, 'refs/tags/v')
    environment:
      name: pypi
      url: https://pypi.org/project/torchvinecopulib/
    permissions:
      id-token: write
      # contents: write
    steps:
      - name: Download dist/*
        uses: actions/download-artifact@v4
        with:
          name: python-distribution-packages
          path: dist/

      - name: Publish to PyPI via Twine
        uses: pypa/gh-action-pypi-publish@release/v1
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        with:
          verbose: true
          skip-existing: true

  github-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: publish-testpypi
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write
      id-token: write

    steps:
      - name: Download dist/*
        uses: actions/download-artifact@v4
        with:
          name: python-distribution-packages
          path: dist/

      - name: Sign the distribution packages with Sigstore
        uses: sigstore/gh-action-sigstore-python@v3.0.0
        with:
          inputs: |
            ./dist/*.tar.gz
            ./dist/*.whl

      - name: Create GitHub Release and Upload Assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create "${{ github.ref_name }}" \
            --repo "${{ github.repository }}" \
            --title "Release ${{ github.ref_name }}" \
            --notes "Automated release for ${{ github.ref_name }}. Signed artifacts are attached." \
            dist/*
